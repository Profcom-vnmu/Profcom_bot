using Telegram.Bot.Types.ReplyMarkups;
using StudentUnionBot.Domain.Enums;

namespace StudentUnionBot.Presentation.Bot.Helpers;

/// <summary>
/// –ü–æ–º—ñ—á–Ω–∏–∫ –¥–ª—è —à–≤–∏–¥–∫–∏—Ö —à–∞–±–ª–æ–Ω—ñ–≤ –≤—ñ–¥–ø–æ–≤—ñ–¥–µ–π –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä—ñ–≤
/// </summary>
public static class AdminReplyTemplatesHelper
{
    /// <summary>
    /// –ö–∞—Ç–µ–≥–æ—Ä—ñ—ó —à–∞–±–ª–æ–Ω—ñ–≤
    /// </summary>
    public enum TemplateCategory
    {
        Acknowledgment,   // –ü—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è
        InProgress,       // –í —Ä–æ–±–æ—Ç—ñ
        NeedInfo,         // –ü–æ—Ç—Ä—ñ–±–Ω–∞ –¥–æ–¥–∞—Ç–∫–æ–≤–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è
        Resolved,         // –í–∏—Ä—ñ—à–µ–Ω–æ
        Rejection         // –í—ñ–¥—Ö–∏–ª–µ–Ω–æ
    }

    /// <summary>
    /// –®–∞–±–ª–æ–Ω–∏ –≤—ñ–¥–ø–æ–≤—ñ–¥–µ–π –∑–∞ –∫–∞—Ç–µ–≥–æ—Ä—ñ—è–º–∏
    /// </summary>
    private static readonly Dictionary<TemplateCategory, List<string>> Templates = new()
    {
        [TemplateCategory.Acknowledgment] = new()
        {
            "‚úÖ –í–∞—à–µ –∑–≤–µ—Ä–Ω–µ–Ω–Ω—è –ø—Ä–∏–π–Ω—è—Ç–æ –≤ —Ä–æ–±–æ—Ç—É. –û—á—ñ–∫—É–π—Ç–µ –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ –Ω–∞–π–±–ª–∏–∂—á–∏–º —á–∞—Å–æ–º.",
            "‚úÖ –î—è–∫—É—î–º–æ –∑–∞ –∑–≤–µ—Ä–Ω–µ–Ω–Ω—è! –ú–∏ –≤–∂–µ –ø—Ä–∞—Ü—é—î–º–æ –Ω–∞–¥ –≤–∞—à–∏–º –ø–∏—Ç–∞–Ω–Ω—è–º.",
            "‚úÖ –í–∞—à–µ –ø–∏—Ç–∞–Ω–Ω—è –ø—Ä–∏–π–Ω—è—Ç–æ. –í—ñ–¥–ø–æ–≤—ñ–¥—å –±—É–¥–µ –Ω–∞–¥–∞–Ω–∞ –ø—Ä–æ—Ç—è–≥–æ–º 1-2 —Ä–æ–±–æ—á–∏—Ö –¥–Ω—ñ–≤.",
            "‚úÖ –û—Ç—Ä–∏–º–∞–ª–∏ –≤–∞—à–µ –∑–≤–µ—Ä–Ω–µ–Ω–Ω—è. –í–æ–Ω–æ –ø–µ—Ä–µ–±—É–≤–∞—î –≤ –æ–±—Ä–æ–±—Ü—ñ."
        },
        
        [TemplateCategory.InProgress] = new()
        {
            "‚è≥ –ü—Ä–∞—Ü—é—î–º–æ –Ω–∞–¥ –≤–∞—à–∏–º –∑–≤–µ—Ä–Ω–µ–Ω–Ω—è–º. –Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –±—É–¥–µ –Ω–∞–¥–∞–Ω–∞ –Ω–∞–π–±–ª–∏–∂—á–∏–º —á–∞—Å–æ–º.",
            "‚è≥ –í–∞—à–µ –ø–∏—Ç–∞–Ω–Ω—è —Ä–æ–∑–≥–ª—è–¥–∞—î—Ç—å—Å—è –ø—Ä–æ—Ñ—ñ–ª—å–Ω–∏–º —Å–ø–µ—Ü—ñ–∞–ª—ñ—Å—Ç–æ–º.",
            "‚è≥ –ó–±–∏—Ä–∞—î–º–æ –Ω–µ–æ–±—Ö—ñ–¥–Ω—É —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –¥–ª—è –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ –Ω–∞ –≤–∞—à–µ –∑–∞–ø–∏—Ç–∞–Ω–Ω—è.",
            "‚è≥ –ó–≤–µ—Ä–Ω–µ–Ω–Ω—è –≤ —Ä–æ–±–æ—Ç—ñ. –û—á—ñ–∫—É–π—Ç–µ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è."
        },
        
        [TemplateCategory.NeedInfo] = new()
        {
            "‚ùì –î–ª—è –≤–∏—Ä—ñ—à–µ–Ω–Ω—è –≤–∞—à–æ–≥–æ –ø–∏—Ç–∞–Ω–Ω—è –ø–æ—Ç—Ä—ñ–±–Ω–∞ –¥–æ–¥–∞—Ç–∫–æ–≤–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è. –ë—É–¥—å –ª–∞—Å–∫–∞, –Ω–∞–¥–∞–π—Ç–µ –±—ñ–ª—å—à–µ –¥–µ—Ç–∞–ª–µ–π.",
            "‚ùì –©–æ–± –¥–æ–ø–æ–º–æ–≥—Ç–∏ –≤–∞–º, –ø–æ—Ç—Ä—ñ–±–Ω–æ —É—Ç–æ—á–Ω–∏—Ç–∏ –¥–µ—è–∫—ñ –º–æ–º–µ–Ω—Ç–∏. –ù–∞–ø–∏—à—ñ—Ç—å, –±—É–¥—å –ª–∞—Å–∫–∞, –¥–µ—Ç–∞–ª—å–Ω—ñ—à–µ.",
            "‚ùì –ë—É–¥—å –ª–∞—Å–∫–∞, –Ω–∞–¥–∞–π—Ç–µ –±—ñ–ª—å—à–µ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó:\n- –§–∞–∫—É–ª—å—Ç–µ—Ç —Ç–∞ –∫—É—Ä—Å\n- –î–∞—Ç–∞ –≤–∏–Ω–∏–∫–Ω–µ–Ω–Ω—è –ø–∏—Ç–∞–Ω–Ω—è\n- –Ü–Ω—à—ñ –≤–∞–∂–ª–∏–≤—ñ –¥–µ—Ç–∞–ª—ñ",
            "‚ùì –î–ª—è –æ–ø—Ä–∞—Ü—é–≤–∞–Ω–Ω—è –∑–≤–µ—Ä–Ω–µ–Ω–Ω—è –Ω–∞–º –ø–æ—Ç—Ä—ñ–±–Ω—ñ –¥–æ–¥–∞—Ç–∫–æ–≤—ñ –¥–∞–Ω—ñ. –£—Ç–æ—á–Ω—ñ—Ç—å, –±—É–¥—å –ª–∞—Å–∫–∞."
        },
        
        [TemplateCategory.Resolved] = new()
        {
            "‚úÖ –í–∞—à–µ –ø–∏—Ç–∞–Ω–Ω—è –≤–∏—Ä—ñ—à–µ–Ω–æ. –Ø–∫—â–æ –≤–∏–Ω–∏–∫–Ω—É—Ç—å –¥–æ–¥–∞—Ç–∫–æ–≤—ñ –∑–∞–ø–∏—Ç–∞–Ω–Ω—è - –ø–∏—à—ñ—Ç—å!",
            "‚úÖ –ü—Ä–æ–±–ª–µ–º—É –≤–∏—Ä—ñ—à–µ–Ω–æ. –î—è–∫—É—î–º–æ –∑–∞ –∑–≤–µ—Ä–Ω–µ–Ω–Ω—è –¥–æ –ø—Ä–æ—Ñ–∫–æ–º—É!",
            "‚úÖ –ü–∏—Ç–∞–Ω–Ω—è –æ–ø—Ä–∞—Ü—å–æ–≤–∞–Ω–æ —Ç–∞ –≤–∏—Ä—ñ—à–µ–Ω–æ. –ü—Ä–∏—î–º–Ω–æ–≥–æ –Ω–∞–≤—á–∞–Ω–Ω—è!",
            "‚úÖ –í–∏—Ä—ñ—à–µ–Ω–æ! –Ø–∫—â–æ –ø–æ—Ç—Ä—ñ–±–Ω–∞ –¥–æ–¥–∞—Ç–∫–æ–≤–∞ –¥–æ–ø–æ–º–æ–≥–∞ - –∑–≤–µ—Ä—Ç–∞–π—Ç–µ—Å—å."
        },
        
        [TemplateCategory.Rejection] = new()
        {
            "‚ö†Ô∏è –ù–∞ –∂–∞–ª—å, —Ü–µ –ø–∏—Ç–∞–Ω–Ω—è –Ω–µ –≤—Ö–æ–¥–∏—Ç—å –¥–æ –∫–æ–º–ø–µ—Ç–µ–Ω—Ü—ñ—ó –ø—Ä–æ—Ñ–∫–æ–º—É. –ó–≤–µ—Ä–Ω—ñ—Ç—å—Å—è, –±—É–¥—å –ª–∞—Å–∫–∞, –¥–æ –¥–µ–∫–∞–Ω–∞—Ç—É.",
            "‚ö†Ô∏è –î–ª—è –≤–∏—Ä—ñ—à–µ–Ω–Ω—è —Ü—å–æ–≥–æ –ø–∏—Ç–∞–Ω–Ω—è –ø–æ—Ç—Ä—ñ–±–Ω–æ –∑–≤–µ—Ä–Ω—É—Ç–∏—Å—è –±–µ–∑–ø–æ—Å–µ—Ä–µ–¥–Ω—å–æ –¥–æ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ü—ñ—ó —É–Ω—ñ–≤–µ—Ä—Å–∏—Ç–µ—Ç—É.",
            "‚ö†Ô∏è –î–∞–Ω–µ –ø–∏—Ç–∞–Ω–Ω—è –Ω–µ –º–æ–∂–µ–º–æ –≤–∏—Ä—ñ—à–∏—Ç–∏ —á–µ—Ä–µ–∑ –≤—ñ–¥—Å—É—Ç–Ω—ñ—Å—Ç—å –Ω–µ–æ–±—Ö—ñ–¥–Ω–∏—Ö –ø–æ–≤–Ω–æ–≤–∞–∂–µ–Ω—å.",
            "‚ö†Ô∏è –ù–∞ –∂–∞–ª—å, –Ω–µ –º–æ–∂–µ–º–æ –¥–æ–ø–æ–º–æ–≥—Ç–∏ –∑ —Ü–∏–º –ø–∏—Ç–∞–Ω–Ω—è–º. –†–µ–∫–æ–º–µ–Ω–¥—É—î–º–æ –∑–≤–µ—Ä–Ω—É—Ç–∏—Å—è –¥–æ –≤—ñ–¥–ø–æ–≤—ñ–¥–∞–ª—å–Ω–æ–≥–æ –≤—ñ–¥–¥—ñ–ª—É."
        }
    };

    /// <summary>
    /// –°–ø–µ—Ü—ñ–∞–ª—å–Ω—ñ —à–∞–±–ª–æ–Ω–∏ –∑–∞ –∫–∞—Ç–µ–≥–æ—Ä—ñ—è–º–∏ –∑–≤–µ—Ä–Ω–µ–Ω—å
    /// </summary>
    private static readonly Dictionary<AppealCategory, List<string>> CategorySpecificTemplates = new()
    {
        [AppealCategory.Scholarship] = new()
        {
            "üí∞ –©–æ–¥–æ —Å—Ç–∏–ø–µ–Ω–¥—ñ—ó: –¥–æ–∫—É–º–µ–Ω—Ç–∏ –ø–µ—Ä–µ–¥–∞–Ω—ñ –¥–æ –±—É—Ö–≥–∞–ª—Ç–µ—Ä—ñ—ó. –û—á—ñ–∫—É–π—Ç–µ –Ω–∞—Ä–∞—Ö—É–≤–∞–Ω–Ω—è –Ω–∞–π–±–ª–∏–∂—á–∏–º —á–∞—Å–æ–º.",
            "üí∞ –í–∞—à–µ –ø–∏—Ç–∞–Ω–Ω—è –ø—Ä–æ —Å—Ç–∏–ø–µ–Ω–¥—ñ—é –æ–ø—Ä–∞—Ü—å–æ–≤–∞–Ω–æ. –ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ —Å—Ç–∞—Ç—É—Å –≤ –æ—Å–æ–±–∏—Å—Ç–æ–º—É –∫–∞–±—ñ–Ω–µ—Ç—ñ.",
            "üí∞ –î–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è —Å—Ç–∏–ø–µ–Ω–¥—ñ—ó –ø–æ—Ç—Ä—ñ–±–Ω–æ –Ω–∞–¥–∞—Ç–∏ –¥–æ–≤—ñ–¥–∫—É –ø—Ä–æ —É—Å–ø—ñ—à–Ω—ñ—Å—Ç—å. –ó–≤–µ—Ä–Ω—ñ—Ç—å—Å—è –¥–æ –¥–µ–∫–∞–Ω–∞—Ç—É."
        },
        
        [AppealCategory.Dormitory] = new()
        {
            "üè† –©–æ–¥–æ –≥—É—Ä—Ç–æ–∂–∏—Ç–∫—É: –≤–∞—à–∞ –∑–∞—è–≤–∫–∞ –ø–µ—Ä–µ–¥–∞–Ω–∞ –∫–æ–º–µ–Ω–¥–∞–Ω—Ç–æ–≤—ñ. –û—á—ñ–∫—É–π—Ç–µ –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ.",
            "üè† –ü–∏—Ç–∞–Ω–Ω—è –ø–æ –≥—É—Ä—Ç–æ–∂–∏—Ç–∫—É –æ–ø—Ä–∞—Ü—å–æ–≤–∞–Ω–æ. –ó–≤–µ—Ä–Ω—ñ—Ç—å—Å—è –æ—Å–æ–±–∏—Å—Ç–æ –¥–æ –∫–æ–º–µ–Ω–¥–∞–Ω—Ç–∞ –¥–ª—è —É—Ç–æ—á–Ω–µ–Ω–Ω—è –¥–µ—Ç–∞–ª–µ–π.",
            "üè† –í–∞—à–µ –∑–≤–µ—Ä–Ω–µ–Ω–Ω—è —â–æ–¥–æ –ø–æ—Å–µ–ª–µ–Ω–Ω—è –≤ –≥—É—Ä—Ç–æ–∂–∏—Ç–æ–∫ –ø—Ä–∏–π–Ω—è—Ç–æ –≤ —Ä–æ–±–æ—Ç—É."
        },
        
        [AppealCategory.Events] = new()
        {
            "üéâ –î—è–∫—É—î–º–æ –∑–∞ —ñ–¥–µ—é –∑–∞—Ö–æ–¥—É! –ú–∏ –æ–±–≥–æ–≤–æ—Ä–∏–º–æ —ó—ó –Ω–∞ –Ω–∞–π–±–ª–∏–∂—á–æ–º—É –∑–∞—Å—ñ–¥–∞–Ω–Ω—ñ –ø—Ä–æ—Ñ–∫–æ–º—É.",
            "üéâ –í–∞—à–∞ –ø—Ä–æ–ø–æ–∑–∏—Ü—ñ—è —â–æ–¥–æ –∑–∞—Ö–æ–¥—É –ø—Ä–∏–π–Ω—è—Ç–∞. –ü–æ–≤—ñ–¥–æ–º–∏–º–æ –ø—Ä–æ –¥–µ—Ç–∞–ª—ñ –Ω–∞–π–±–ª–∏–∂—á–∏–º —á–∞—Å–æ–º.",
            "üéâ –ß—É–¥–æ–≤–∞ —ñ–¥–µ—è! –ü—Ä–∞—Ü—é—î–º–æ –Ω–∞–¥ –æ—Ä–≥–∞–Ω—ñ–∑–∞—Ü—ñ—î—é, —Ç—Ä–∏–º–∞–π—Ç–µ –∑–≤'—è–∑–æ–∫."
        },
        
        [AppealCategory.Proposal] = new()
        {
            "üí° –î—è–∫—É—î–º–æ –∑–∞ –ø—Ä–æ–ø–æ–∑–∏—Ü—ñ—é! –ú–∏ —Ä–æ–∑–≥–ª—è–Ω–µ–º–æ —ó—ó –Ω–∞ –Ω–∞–π–±–ª–∏–∂—á–æ–º—É –∑–∞—Å—ñ–¥–∞–Ω–Ω—ñ.",
            "üí° –¶—ñ–∫–∞–≤–∞ —ñ–¥–µ—è! –û–±–≥–æ–≤–æ—Ä–∏–º–æ –º–æ–∂–ª–∏–≤–æ—Å—Ç—ñ —Ä–µ–∞–ª—ñ–∑–∞—Ü—ñ—ó –∑ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ü—ñ—î—é.",
            "üí° –í–∞—à—É –ø—Ä–æ–ø–æ–∑–∏—Ü—ñ—é –ø—Ä–∏–π–Ω—è—Ç–æ –¥–æ —Ä–æ–∑–≥–ª—è–¥—É. –ü–æ–≤—ñ–¥–æ–º–∏–º–æ –ø—Ä–æ —Ä—ñ—à–µ–Ω–Ω—è."
        },
        
        [AppealCategory.Complaint] = new()
        {
            "‚ö†Ô∏è –í–∞—à—É —Å–∫–∞—Ä–≥—É –ø—Ä–∏–π–Ω—è—Ç–æ. –ü—Ä–æ–≤–µ–¥–µ–º–æ —Ä–æ–∑—Å–ª—ñ–¥—É–≤–∞–Ω–Ω—è —Ç–∞ –ø–æ–≤—ñ–¥–æ–º–∏–º–æ –ø—Ä–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∏.",
            "‚ö†Ô∏è –î—è–∫—É—î–º–æ –∑–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é. –ü–∏—Ç–∞–Ω–Ω—è –±—É–¥–µ —Ä–æ–∑–≥–ª—è–Ω—É—Ç–µ –≤ –ø–µ—Ä—à–æ—á–µ—Ä–≥–æ–≤–æ–º—É –ø–æ—Ä—è–¥–∫—É.",
            "‚ö†Ô∏è –°–∫–∞—Ä–≥—É –æ–ø—Ä–∞—Ü—å–æ–≤–∞–Ω–æ. –í–∂–∏–≤–∞—î–º–æ –Ω–µ–æ–±—Ö—ñ–¥–Ω–∏—Ö –∑–∞—Ö–æ–¥—ñ–≤ –¥–ª—è –≤–∏—Ä—ñ—à–µ–Ω–Ω—è —Å–∏—Ç—É–∞—Ü—ñ—ó."
        }
    };

    /// <summary>
    /// –û—Ç—Ä–∏–º—É—î —Å–ø–∏—Å–æ–∫ —à–∞–±–ª–æ–Ω—ñ–≤ –∑–∞ –∫–∞—Ç–µ–≥–æ—Ä—ñ—î—é
    /// </summary>
    public static List<string> GetTemplates(TemplateCategory category)
    {
        return Templates.TryGetValue(category, out var templates) 
            ? new List<string>(templates) 
            : new List<string>();
    }

    /// <summary>
    /// –û—Ç—Ä–∏–º—É—î —Å–ø–µ—Ü—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω—ñ —à–∞–±–ª–æ–Ω–∏ –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó –∑–≤–µ—Ä–Ω–µ–Ω–Ω—è
    /// </summary>
    public static List<string> GetCategoryTemplates(AppealCategory appealCategory)
    {
        return CategorySpecificTemplates.TryGetValue(appealCategory, out var templates)
            ? new List<string>(templates)
            : new List<string>();
    }

    /// <summary>
    /// –û—Ç—Ä–∏–º—É—î –≤—Å—ñ —à–∞–±–ª–æ–Ω–∏ –¥–ª—è –≤–∏–±–æ—Ä—É
    /// </summary>
    public static Dictionary<string, string> GetAllTemplates(AppealCategory? appealCategory = null)
    {
        var result = new Dictionary<string, string>();
        int index = 1;

        // –î–æ–¥–∞—î–º–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∑–æ–≤–∞–Ω—ñ —à–∞–±–ª–æ–Ω–∏
        foreach (var category in Templates.Keys)
        {
            var categoryName = GetCategoryName(category);
            var templates = Templates[category];
            
            foreach (var template in templates)
            {
                result[$"template_{index}"] = $"[{categoryName}] {template}";
                index++;
            }
        }

        // –î–æ–¥–∞—î–º–æ —Å–ø–µ—Ü—ñ–∞–ª—å–Ω—ñ —à–∞–±–ª–æ–Ω–∏ –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó –∑–≤–µ—Ä–Ω–µ–Ω–Ω—è
        if (appealCategory.HasValue && CategorySpecificTemplates.ContainsKey(appealCategory.Value))
        {
            var specialTemplates = CategorySpecificTemplates[appealCategory.Value];
            foreach (var template in specialTemplates)
            {
                result[$"template_{index}"] = $"[–°–ø–µ—Ü—ñ–∞–ª—å–Ω–∏–π] {template}";
                index++;
            }
        }

        return result;
    }

    /// <summary>
    /// –°—Ç–≤–æ—Ä—é—î inline keyboard –∑ —à–∞–±–ª–æ–Ω–∞–º–∏
    /// </summary>
    public static InlineKeyboardMarkup CreateTemplatesKeyboard(int appealId, AppealCategory? appealCategory = null)
    {
        var buttons = new List<List<InlineKeyboardButton>>();

        // –ö–Ω–æ–ø–∫–∏ –∫–∞—Ç–µ–≥–æ—Ä—ñ–π —à–∞–±–ª–æ–Ω—ñ–≤
        buttons.Add(new List<InlineKeyboardButton>
        {
            InlineKeyboardButton.WithCallbackData("‚úÖ –ü—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è", $"admin_template_ack_{appealId}"),
            InlineKeyboardButton.WithCallbackData("‚è≥ –í —Ä–æ–±–æ—Ç—ñ", $"admin_template_progress_{appealId}")
        });

        buttons.Add(new List<InlineKeyboardButton>
        {
            InlineKeyboardButton.WithCallbackData("‚ùì –ü–æ—Ç—Ä—ñ–±–Ω–∞ —ñ–Ω—Ñ–æ", $"admin_template_needinfo_{appealId}"),
            InlineKeyboardButton.WithCallbackData("‚úÖ –í–∏—Ä—ñ—à–µ–Ω–æ", $"admin_template_resolved_{appealId}")
        });

        // –Ø–∫—â–æ —î –∫–∞—Ç–µ–≥–æ—Ä—ñ—è –∑–≤–µ—Ä–Ω–µ–Ω–Ω—è - –¥–æ–¥–∞—î–º–æ —Å–ø–µ—Ü—ñ–∞–ª—å–Ω—ñ —à–∞–±–ª–æ–Ω–∏
        if (appealCategory.HasValue && CategorySpecificTemplates.ContainsKey(appealCategory.Value))
        {
            buttons.Add(new List<InlineKeyboardButton>
            {
                InlineKeyboardButton.WithCallbackData($"‚≠ê {appealCategory.Value.GetEmoji()} –°–ø–µ—Ü—ñ–∞–ª—å–Ω—ñ", $"admin_template_special_{appealId}")
            });
        }

        // –ö–Ω–æ–ø–∫–∞ "–ù–∞–∑–∞–¥"
        buttons.Add(new List<InlineKeyboardButton>
        {
            InlineKeyboardButton.WithCallbackData("üîô –ù–∞–∑–∞–¥ –¥–æ –∑–≤–µ—Ä–Ω–µ–Ω–Ω—è", $"admin_view_{appealId}")
        });

        return new InlineKeyboardMarkup(buttons);
    }

    /// <summary>
    /// –°—Ç–≤–æ—Ä—é—î inline keyboard –∑—ñ —Å–ø–∏—Å–∫–æ–º –∫–æ–Ω–∫—Ä–µ—Ç–Ω–∏—Ö —à–∞–±–ª–æ–Ω—ñ–≤ –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó
    /// </summary>
    public static InlineKeyboardMarkup CreateCategoryTemplatesKeyboard(int appealId, TemplateCategory category)
    {
        var buttons = new List<List<InlineKeyboardButton>>();
        var templates = GetTemplates(category);

        for (int i = 0; i < templates.Count; i++)
        {
            var previewText = templates[i].Length > 50 
                ? templates[i].Substring(0, 47) + "..." 
                : templates[i];
            
            buttons.Add(new List<InlineKeyboardButton>
            {
                InlineKeyboardButton.WithCallbackData(previewText, $"admin_use_template_{appealId}_{(int)category}_{i}")
            });
        }

        // –ö–Ω–æ–ø–∫–∞ "–ù–∞–∑–∞–¥"
        buttons.Add(new List<InlineKeyboardButton>
        {
            InlineKeyboardButton.WithCallbackData("üîô –ù–∞–∑–∞–¥ –¥–æ –∫–∞—Ç–µ–≥–æ—Ä—ñ–π", $"admin_templates_{appealId}")
        });

        return new InlineKeyboardMarkup(buttons);
    }

    /// <summary>
    /// –°—Ç–≤–æ—Ä—é—î inline keyboard –∑—ñ —Å–ø–µ—Ü—ñ–∞–ª—å–Ω–∏–º–∏ —à–∞–±–ª–æ–Ω–∞–º–∏ –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó –∑–≤–µ—Ä–Ω–µ–Ω–Ω—è
    /// </summary>
    public static InlineKeyboardMarkup CreateSpecialTemplatesKeyboard(int appealId, AppealCategory appealCategory)
    {
        var buttons = new List<List<InlineKeyboardButton>>();
        var templates = GetCategoryTemplates(appealCategory);

        for (int i = 0; i < templates.Count; i++)
        {
            var previewText = templates[i].Length > 50 
                ? templates[i].Substring(0, 47) + "..." 
                : templates[i];
            
            buttons.Add(new List<InlineKeyboardButton>
            {
                InlineKeyboardButton.WithCallbackData(previewText, $"admin_use_special_template_{appealId}_{(int)appealCategory}_{i}")
            });
        }

        // –ö–Ω–æ–ø–∫–∞ "–ù–∞–∑–∞–¥"
        buttons.Add(new List<InlineKeyboardButton>
        {
            InlineKeyboardButton.WithCallbackData("üîô –ù–∞–∑–∞–¥ –¥–æ –∫–∞—Ç–µ–≥–æ—Ä—ñ–π", $"admin_templates_{appealId}")
        });

        return new InlineKeyboardMarkup(buttons);
    }

    /// <summary>
    /// –û—Ç—Ä–∏–º—É—î –Ω–∞–∑–≤—É –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó —É–∫—Ä–∞—ó–Ω—Å—å–∫–æ—é
    /// </summary>
    private static string GetCategoryName(TemplateCategory category)
    {
        return category switch
        {
            TemplateCategory.Acknowledgment => "–ü—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è",
            TemplateCategory.InProgress => "–í —Ä–æ–±–æ—Ç—ñ",
            TemplateCategory.NeedInfo => "–ü–æ—Ç—Ä—ñ–±–Ω–∞ —ñ–Ω—Ñ–æ",
            TemplateCategory.Resolved => "–í–∏—Ä—ñ—à–µ–Ω–æ",
            TemplateCategory.Rejection => "–í—ñ–¥—Ö–∏–ª–µ–Ω–æ",
            _ => "–Ü–Ω—à–µ"
        };
    }

    /// <summary>
    /// –û—Ç—Ä–∏–º—É—î —Ç–µ–∫—Å—Ç —à–∞–±–ª–æ–Ω—É –∑–∞ —ñ–Ω–¥–µ–∫—Å–∞–º–∏
    /// </summary>
    public static string? GetTemplateText(TemplateCategory category, int templateIndex)
    {
        var templates = GetTemplates(category);
        return templateIndex >= 0 && templateIndex < templates.Count 
            ? templates[templateIndex] 
            : null;
    }

    /// <summary>
    /// –û—Ç—Ä–∏–º—É—î —Ç–µ–∫—Å—Ç —Å–ø–µ—Ü—ñ–∞–ª—å–Ω–æ–≥–æ —à–∞–±–ª–æ–Ω—É –∑–∞ —ñ–Ω–¥–µ–∫—Å–∞–º–∏
    /// </summary>
    public static string? GetSpecialTemplateText(AppealCategory appealCategory, int templateIndex)
    {
        var templates = GetCategoryTemplates(appealCategory);
        return templateIndex >= 0 && templateIndex < templates.Count 
            ? templates[templateIndex] 
            : null;
    }
}
