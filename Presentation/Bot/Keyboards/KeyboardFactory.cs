using Telegram.Bot.Types.ReplyMarkups;

namespace StudentUnionBot.Presentation.Bot.Keyboards;

/// <summary>
/// –§–∞–±—Ä–∏–∫–∞ –¥–ª—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –∫–ª–∞–≤—ñ–∞—Ç—É—Ä –±–æ—Ç–∞
/// </summary>
public static class KeyboardFactory
{
    /// <summary>
    /// –ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é
    /// </summary>
    public static InlineKeyboardMarkup GetMainMenuKeyboard(bool isAdmin = false)
    {
        var buttons = new List<InlineKeyboardButton[]>
        {
            new[]
            {
                InlineKeyboardButton.WithCallbackData("üìù –°—Ç–≤–æ—Ä–∏—Ç–∏ –∑–≤–µ—Ä–Ω–µ–Ω–Ω—è", "appeal_create"),
                InlineKeyboardButton.WithCallbackData("üìã –ú–æ—ó –∑–≤–µ—Ä–Ω–µ–Ω–Ω—è", "appeal_list")
            },
            new[]
            {
                InlineKeyboardButton.WithCallbackData("üì∞ –ù–æ–≤–∏–Ω–∏", "news_list"),
                InlineKeyboardButton.WithCallbackData("üéâ –ó–∞—Ö–æ–¥–∏", "events_list")
            },
            new[]
            {
                InlineKeyboardButton.WithCallbackData("ü§ù –ü–∞—Ä—Ç–Ω–µ—Ä–∏", "partners_list"),
                InlineKeyboardButton.WithCallbackData("üìû –ö–æ–Ω—Ç–∞–∫—Ç–∏", "contacts_list")
            },
            new[]
            {
                InlineKeyboardButton.WithCallbackData("üë§ –ú—ñ–π –ø—Ä–æ—Ñ—ñ–ª—å", "profile_view"),
                InlineKeyboardButton.WithCallbackData("‚ÑπÔ∏è –î–æ–ø–æ–º–æ–≥–∞", "help")
            }
        };

        // –î–æ–¥–∞—î–º–æ Admin –ø–∞–Ω–µ–ª—å –¥–ª—è –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä—ñ–≤
        if (isAdmin)
        {
            buttons.Add(new[]
            {
                InlineKeyboardButton.WithCallbackData("üë®‚Äçüíº –ê–¥–º—ñ–Ω –ø–∞–Ω–µ–ª—å", "admin_panel")
            });
        }

        return new InlineKeyboardMarkup(buttons);
    }

    /// <summary>
    /// –ú–µ–Ω—é –∫–∞—Ç–µ–≥–æ—Ä—ñ–π –∑–≤–µ—Ä–Ω–µ–Ω—å
    /// </summary>
    public static InlineKeyboardMarkup GetAppealCategoriesKeyboard()
    {
        return new InlineKeyboardMarkup(new[]
        {
            new[]
            {
                InlineKeyboardButton.WithCallbackData("üí∞ –°—Ç–∏–ø–µ–Ω–¥—ñ—è", "appeal_cat_1"),
                InlineKeyboardButton.WithCallbackData("üè† –ì—É—Ä—Ç–æ–∂–∏—Ç–æ–∫", "appeal_cat_2")
            },
            new[]
            {
                InlineKeyboardButton.WithCallbackData("üéâ –ó–∞—Ö–æ–¥–∏", "appeal_cat_3"),
                InlineKeyboardButton.WithCallbackData("üí° –ü—Ä–æ–ø–æ–∑–∏—Ü—ñ—è", "appeal_cat_4")
            },
            new[]
            {
                InlineKeyboardButton.WithCallbackData("‚ö†Ô∏è –°–∫–∞—Ä–≥–∞", "appeal_cat_5"),
                InlineKeyboardButton.WithCallbackData("üìù –Ü–Ω—à–µ", "appeal_cat_6")
            },
            new[]
            {
                InlineKeyboardButton.WithCallbackData("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", "back_to_main")
            }
        });
    }

    /// <summary>
    /// –ö–Ω–æ–ø–∫–∞ "–ù–∞–∑–∞–¥ –¥–æ –≥–æ–ª–æ–≤–Ω–æ–≥–æ –º–µ–Ω—é"
    /// </summary>
    public static InlineKeyboardMarkup GetBackToMainMenuKeyboard()
    {
        return new InlineKeyboardMarkup(new[]
        {
            new[]
            {
                InlineKeyboardButton.WithCallbackData("‚¨ÖÔ∏è –ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é", "back_to_main")
            }
        });
    }

    /// <summary>
    /// –ö–ª–∞–≤—ñ–∞—Ç—É—Ä–∞ –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –∑–≤–µ—Ä–Ω–µ–Ω–Ω—è
    /// </summary>
    public static InlineKeyboardMarkup GetAppealDetailsKeyboard(int appealId, bool isActive)
    {
        var buttons = new List<InlineKeyboardButton[]>();

        if (isActive)
        {
            buttons.Add(new[]
            {
                InlineKeyboardButton.WithCallbackData("üí¨ –î–æ–¥–∞—Ç–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è", $"appeal_msg_{appealId}"),
                InlineKeyboardButton.WithCallbackData("‚úÖ –ó–∞–∫—Ä–∏—Ç–∏", $"appeal_close_{appealId}")
            });
        }

        buttons.Add(new[]
        {
            InlineKeyboardButton.WithCallbackData("üîÑ –û–Ω–æ–≤–∏—Ç–∏", $"appeal_view_{appealId}"),
            InlineKeyboardButton.WithCallbackData("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", "appeal_list")
        });

        return new InlineKeyboardMarkup(buttons);
    }

    /// <summary>
    /// –ü–∞–≥—ñ–Ω–∞—Ü—ñ—è –¥–ª—è —Å–ø–∏—Å–∫—ñ–≤
    /// </summary>
    public static InlineKeyboardMarkup GetPaginationKeyboard(
        string dataPrefix,
        int currentPage,
        int totalPages,
        string? backCallback = null)
    {
        var buttons = new List<InlineKeyboardButton>();

        if (currentPage > 1)
        {
            buttons.Add(InlineKeyboardButton.WithCallbackData("‚óÄÔ∏è", $"{dataPrefix}_page_{currentPage - 1}"));
        }

        buttons.Add(InlineKeyboardButton.WithCallbackData($"{currentPage}/{totalPages}", "noop"));

        if (currentPage < totalPages)
        {
            buttons.Add(InlineKeyboardButton.WithCallbackData("‚ñ∂Ô∏è", $"{dataPrefix}_page_{currentPage + 1}"));
        }

        var rows = new List<InlineKeyboardButton[]> { buttons.ToArray() };

        if (!string.IsNullOrEmpty(backCallback))
        {
            rows.Add(new[]
            {
                InlineKeyboardButton.WithCallbackData("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", backCallback)
            });
        }

        return new InlineKeyboardMarkup(rows);
    }

    /// <summary>
    /// –ü—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è –¥—ñ—ó (–¢–∞–∫/–ù—ñ)
    /// </summary>
    public static InlineKeyboardMarkup GetConfirmationKeyboard(string confirmCallback, string cancelCallback)
    {
        return new InlineKeyboardMarkup(new[]
        {
            new[]
            {
                InlineKeyboardButton.WithCallbackData("‚úÖ –¢–∞–∫", confirmCallback),
                InlineKeyboardButton.WithCallbackData("‚ùå –ù—ñ", cancelCallback)
            }
        });
    }

    // ==================== ADMIN KEYBOARDS ====================

    /// <summary>
    /// –ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é –∞–¥–º—ñ–Ω –ø–∞–Ω–µ–ª—ñ
    /// </summary>
    public static InlineKeyboardMarkup GetAdminPanelKeyboard()
    {
        return new InlineKeyboardMarkup(new[]
        {
            new[]
            {
                InlineKeyboardButton.WithCallbackData("üìã –í—Å—ñ –∑–≤–µ—Ä–Ω–µ–Ω–Ω—è", "admin_appeals_all"),
                InlineKeyboardButton.WithCallbackData("üÜï –ù–æ–≤—ñ", "admin_appeals_new")
            },
            new[]
            {
                InlineKeyboardButton.WithCallbackData("üë§ –ú–æ—ó –∑–≤–µ—Ä–Ω–µ–Ω–Ω—è", "admin_appeals_my"),
                InlineKeyboardButton.WithCallbackData("‚ùì –ù–µ–ø—Ä–∏–∑–Ω–∞—á–µ–Ω—ñ", "admin_appeals_unassigned")
            },
            new[]
            {
                InlineKeyboardButton.WithCallbackData("üîç –ü–æ—à—É–∫", "admin_appeals_search"),
                InlineKeyboardButton.WithCallbackData("üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", "admin_stats")
            },
            new[]
            {
                InlineKeyboardButton.WithCallbackData("‚¨ÖÔ∏è –ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é", "back_to_main")
            }
        });
    }

    /// <summary>
    /// –ö–ª–∞–≤—ñ–∞—Ç—É—Ä–∞ –¥–ª—è –∫–µ—Ä—É–≤–∞–Ω–Ω—è –∑–≤–µ—Ä–Ω–µ–Ω–Ω—è–º (–∞–¥–º—ñ–Ω)
    /// </summary>
    public static InlineKeyboardMarkup GetAdminAppealActionsKeyboard(int appealId, bool isAssignedToMe, bool isClosed)
    {
        var buttons = new List<InlineKeyboardButton[]>();

        if (!isClosed)
        {
            // –í—ñ–¥–ø–æ–≤—ñ—Å—Ç–∏
            buttons.Add(new[]
            {
                InlineKeyboardButton.WithCallbackData("üí¨ –í—ñ–¥–ø–æ–≤—ñ—Å—Ç–∏", $"admin_reply_{appealId}")
            });

            // –ü—Ä–∏–∑–Ω–∞—á–µ–Ω–Ω—è
            if (isAssignedToMe)
            {
                buttons.Add(new[]
                {
                    InlineKeyboardButton.WithCallbackData("‚ùå –ó–Ω—è—Ç–∏ –ø—Ä–∏–∑–Ω–∞—á–µ–Ω–Ω—è", $"admin_unassign_{appealId}")
                });
            }
            else
            {
                buttons.Add(new[]
                {
                    InlineKeyboardButton.WithCallbackData("‚úã –í–∑—è—Ç–∏ –≤ —Ä–æ–±–æ—Ç—É", $"admin_assign_me_{appealId}")
                });
            }

            // –ü—Ä—ñ–æ—Ä–∏—Ç–µ—Ç —Ç–∞ –∑–∞–∫—Ä–∏—Ç—Ç—è
            buttons.Add(new[]
            {
                InlineKeyboardButton.WithCallbackData("‚ö° –ü—Ä—ñ–æ—Ä–∏—Ç–µ—Ç", $"admin_priority_{appealId}"),
                InlineKeyboardButton.WithCallbackData("‚úÖ –ó–∞–∫—Ä–∏—Ç–∏", $"admin_close_{appealId}")
            });
        }

        // –ù–∞–≤—ñ–≥–∞—Ü—ñ—è
        buttons.Add(new[]
        {
            InlineKeyboardButton.WithCallbackData("üîÑ –û–Ω–æ–≤–∏—Ç–∏", $"admin_view_{appealId}"),
            InlineKeyboardButton.WithCallbackData("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", "admin_panel")
        });

        return new InlineKeyboardMarkup(buttons);
    }

    /// <summary>
    /// –í–∏–±—ñ—Ä –ø—Ä—ñ–æ—Ä–∏—Ç–µ—Ç—É
    /// </summary>
    public static InlineKeyboardMarkup GetPrioritySelectionKeyboard(int appealId)
    {
        return new InlineKeyboardMarkup(new[]
        {
            new[]
            {
                InlineKeyboardButton.WithCallbackData("üü¢ –ù–∏–∑—å–∫–∏–π", $"admin_set_priority_{appealId}_1"),
                InlineKeyboardButton.WithCallbackData("üü° –ù–æ—Ä–º–∞–ª—å–Ω–∏–π", $"admin_set_priority_{appealId}_2")
            },
            new[]
            {
                InlineKeyboardButton.WithCallbackData("üü† –í–∏—Å–æ–∫–∏–π", $"admin_set_priority_{appealId}_3"),
                InlineKeyboardButton.WithCallbackData("üî¥ –¢–µ—Ä–º—ñ–Ω–æ–≤–∏–π", $"admin_set_priority_{appealId}_4")
            },
            new[]
            {
                InlineKeyboardButton.WithCallbackData("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", $"admin_view_{appealId}")
            }
        });
    }

    /// <summary>
    /// –§—ñ–ª—å—Ç—Ä–∏ –¥–ª—è –∑–≤–µ—Ä–Ω–µ–Ω—å
    /// </summary>
    public static InlineKeyboardMarkup GetAdminAppealFiltersKeyboard(string currentFilter = "all")
    {
        return new InlineKeyboardMarkup(new[]
        {
            new[]
            {
                InlineKeyboardButton.WithCallbackData("üìã –í—Å—ñ", "admin_filter_all"),
                InlineKeyboardButton.WithCallbackData("üÜï –ù–æ–≤—ñ", "admin_filter_new")
            },
            new[]
            {
                InlineKeyboardButton.WithCallbackData("‚è≥ –í —Ä–æ–±–æ—Ç—ñ", "admin_filter_inprogress"),
                InlineKeyboardButton.WithCallbackData("‚úÖ –ó–∞–∫—Ä–∏—Ç—ñ", "admin_filter_closed")
            },
            new[]
            {
                InlineKeyboardButton.WithCallbackData("‚¨ÖÔ∏è –ê–¥–º—ñ–Ω –ø–∞–Ω–µ–ª—å", "admin_panel")
            }
        });
    }
}
