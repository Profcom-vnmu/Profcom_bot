namespace StudentUnionBot.Domain.Enums;

/// <summary>
/// Type/category of event
/// </summary>
public enum EventType
{
    /// <summary>
    /// Cultural event (concerts, exhibitions, etc.)
    /// </summary>
    Cultural = 1,
    
    /// <summary>
    /// Educational event (seminars, workshops, lectures)
    /// </summary>
    Educational = 2,
    
    /// <summary>
    /// Sports event
    /// </summary>
    Sports = 3,
    
    /// <summary>
    /// Social event (parties, gatherings)
    /// </summary>
    Social = 4,
    
    /// <summary>
    /// Volunteer/charity event
    /// </summary>
    Volunteer = 5,
    
    /// <summary>
    /// Career/professional development event
    /// </summary>
    Career = 6,
    
    /// <summary>
    /// Meeting or conference
    /// </summary>
    Meeting = 7,
    
    /// <summary>
    /// Other type of event
    /// </summary>
    Other = 99
}

/// <summary>
/// Current status of an event
/// </summary>
public enum EventStatus
{
    /// <summary>
    /// Event is planned but hasn't started yet
    /// </summary>
    Planned = 1,
    
    /// <summary>
    /// Event is currently in progress
    /// </summary>
    InProgress = 2,
    
    /// <summary>
    /// Event has been completed
    /// </summary>
    Completed = 3,
    
    /// <summary>
    /// Event was cancelled
    /// </summary>
    Cancelled = 4,
    
    /// <summary>
    /// Event is postponed to a later date
    /// </summary>
    Postponed = 5
}

/// <summary>
/// Extension methods for Event enums
/// </summary>
public static class EventEnumExtensions
{
    public static string GetDisplayName(this EventType type)
    {
        return type switch
        {
            EventType.Cultural => "–ö—É–ª—å—Ç—É—Ä–Ω–∏–π –∑–∞—Ö—ñ–¥",
            EventType.Educational => "–û—Å–≤—ñ—Ç–Ω—ñ–π –∑–∞—Ö—ñ–¥",
            EventType.Sports => "–°–ø–æ—Ä—Ç–∏–≤–Ω–∏–π –∑–∞—Ö—ñ–¥",
            EventType.Social => "–°–æ—Ü—ñ–∞–ª—å–Ω–∏–π –∑–∞—Ö—ñ–¥",
            EventType.Volunteer => "–í–æ–ª–æ–Ω—Ç–µ—Ä—Å—Ç–≤–æ",
            EventType.Career => "–ö–∞—Ä'—î—Ä–∞ —Ç–∞ —Ä–æ–∑–≤–∏—Ç–æ–∫",
            EventType.Meeting => "–ó—É—Å—Ç—Ä—ñ—á/–ö–æ–Ω—Ñ–µ—Ä–µ–Ω—Ü—ñ—è",
            EventType.Other => "–Ü–Ω—à–µ",
            _ => "–ù–µ–≤—ñ–¥–æ–º–æ"
        };
    }
    
    public static string GetDisplayName(this EventStatus status)
    {
        return status switch
        {
            EventStatus.Planned => "–ó–∞–ø–ª–∞–Ω–æ–≤–∞–Ω–æ",
            EventStatus.InProgress => "–í –ø—Ä–æ—Ü–µ—Å—ñ",
            EventStatus.Completed => "–ó–∞–≤–µ—Ä—à–µ–Ω–æ",
            EventStatus.Cancelled => "–°–∫–∞—Å–æ–≤–∞–Ω–æ",
            EventStatus.Postponed => "–í—ñ–¥–∫–ª–∞–¥–µ–Ω–æ",
            _ => "–ù–µ–≤—ñ–¥–æ–º–æ"
        };
    }
    
    public static string GetEmoji(this EventType type)
    {
        return type switch
        {
            EventType.Cultural => "üé≠",
            EventType.Educational => "üìö",
            EventType.Sports => "‚öΩ",
            EventType.Social => "üéâ",
            EventType.Volunteer => "ü§ù",
            EventType.Career => "üíº",
            EventType.Meeting => "üë•",
            EventType.Other => "üìå",
            _ => "‚ùì"
        };
    }
    
    public static string GetEmoji(this EventStatus status)
    {
        return status switch
        {
            EventStatus.Planned => "üìÖ",
            EventStatus.InProgress => "‚ñ∂Ô∏è",
            EventStatus.Completed => "‚úÖ",
            EventStatus.Cancelled => "‚ùå",
            EventStatus.Postponed => "‚è∏Ô∏è",
            _ => "‚ùì"
        };
    }
}
